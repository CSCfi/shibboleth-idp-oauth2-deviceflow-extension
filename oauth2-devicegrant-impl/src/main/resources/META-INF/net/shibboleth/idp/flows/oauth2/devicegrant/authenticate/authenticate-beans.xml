<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd                            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd                            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
	default-init-method="initialize" default-destroy-method="destroy">

	<bean id="shibboleth.oidc.browserProfile"
		class="java.lang.Boolean" c:_0="true" />

	<bean id="RethrowingFlowExecutionExceptionHandler"
		class="net.shibboleth.idp.profile.impl.RethrowingFlowExecutionExceptionHandler" />

	<bean id="DecodeMessage"
		class="org.opensaml.profile.action.impl.DecodeMessage"
		scope="prototype">
		<constructor-arg>
			<bean
				class="fi.csc.shibboleth.plugin.oauth2.decoding.impl.OAuth2DeviceAuthenticationRequestDecoder"
				scope="prototype"
				p:httpServletRequestSupplier-ref="shibboleth.HttpServletRequestSupplier" />
		</constructor-arg>
	</bean>

	<bean id="ExtractUserCodeFromMessage"
		class="fi.csc.shibboleth.plugin.oauth2.profile.impl.ExtractUserCodeFromMessage"
		scope="prototype" />

	<bean id="ExtractUserCodeFromFormRequest"
		class="fi.csc.shibboleth.plugin.oauth2.profile.impl.ExtractUserCodeFromFormRequest"
		scope="prototype"
		p:httpServletRequestSupplier-ref="shibboleth.HttpServletRequestSupplier" />

	<bean id="InitializeAuthenticationContext"
		class="fi.csc.shibboleth.plugin.oauth2.profile.impl.InitializeAuthenticationContext"
		scope="prototype" />

	<bean id="InitializeRelyingPartyContext"
		class="net.shibboleth.idp.plugin.oidc.op.profile.impl.InitializeRelyingPartyContext"
		scope="prototype"
		p:clientIDLookupStrategy-ref="shibboleth.ClientIDLookupStrategy" />

	<bean id="PopulateUserAgentContext"
		class="net.shibboleth.idp.profile.impl.PopulateUserAgentContext"
		scope="prototype"
		p:httpServletRequestSupplier-ref="shibboleth.HttpServletRequestSupplier" />

	<bean id="SetSectorIdentifierForAttributeResolution"
		class="net.shibboleth.idp.plugin.oidc.op.profile.impl.SetSectorIdentifierForAttributeResolution"
		scope="prototype" />

	<bean id="PopulatePostAuthnInterceptContext"
		class="net.shibboleth.idp.profile.interceptor.impl.PopulateProfileInterceptorContext"
		scope="prototype"
		p:availableFlows="#{@'shibboleth.ProfileInterceptorFlowDescriptorManager'.getComponents()}">
		<property name="activeFlowsLookupStrategy">
			<bean
				class="net.shibboleth.idp.authn.config.navigate.PostAuthenticationFlowsLookupFunction" />
		</property>
	</bean>

	<bean id="ValidateScope"
		class="net.shibboleth.idp.plugin.oidc.op.oauth2.profile.impl.ValidateScope"
		scope="prototype"
		p:requestedScopeLookupStrategy-ref="shibboleth.deviceflow.ScopeLookupStrategy"
		p:allowedScopeLookupStrategy="#{getObject('shibboleth.oidc.AllowedScopeStrategy') ?: getObject('shibboleth.oidc.DefaultAllowedScopeStrategy')}" />

	<bean id="shibboleth.deviceflow.ScopeLookupStrategy"
		class="fi.csc.shibboleth.plugin.oauth2.devicegrant.profile.context.navigate.DeviceScopeLookupFunction"
		scope="prototype" p:deviceCodesCache-ref="shibboleth.DeviceCodesCache" />

	<bean id="PopulateClientStorageLoadContext"
		class="org.opensaml.storage.impl.client.PopulateClientStorageLoadContext"
		scope="prototype"
		p:storageServices="#{ getObject('shibboleth.ClientStorageServices') ?: getObject('shibboleth.DefaultClientStorageServices') }" />

	<bean id="SetAuthenticationTimeToResponseContext"
		class="net.shibboleth.idp.plugin.oidc.op.profile.impl.SetAuthenticationTimeToResponseContext"
		scope="prototype" />

	<bean id="SetAuthenticationContextClassReferenceToResponseContext"
		class="net.shibboleth.idp.plugin.oidc.op.profile.impl.SetAuthenticationContextClassReferenceToResponseContext"
		scope="prototype" />

	<bean id="SetSubjectToResponseContext"
		class="net.shibboleth.idp.plugin.oidc.op.profile.impl.SetSubjectToResponseContext"
		scope="prototype">
		<property name="subjectLookupStrategy">
			<bean
				class="net.shibboleth.idp.plugin.oidc.op.profile.logic.AttributeResolutionSubjectLookupFunction"
				p:transcoderRegistry-ref="shibboleth.AttributeRegistryService" />
		</property>
		<property name="subjectTypeLookupStrategy">
			<bean
				class="net.shibboleth.idp.plugin.oidc.op.profile.logic.DefaultSubjectTypeStrategy" />
		</property>
	</bean>

	<bean id="InitializeOutboundMessageContext"
		class="net.shibboleth.idp.plugin.oidc.op.profile.impl.InitializeOutboundAuthenticationResponseMessageContext"
		scope="prototype" />

	<bean id="SetTokenDeliveryAttributesToResponseContext"
		class="net.shibboleth.idp.plugin.oidc.op.profile.impl.SetTokenDeliveryAttributesToResponseContext"
		scope="prototype"
		p:transcoderRegistry-ref="shibboleth.AttributeRegistryService" />

	<bean id="SetConsentToResponseContext"
		class="net.shibboleth.idp.plugin.oidc.op.profile.impl.SetConsentToResponseContext"
		scope="prototype" />

	<bean id="StoreDeviceState"
		class="fi.csc.shibboleth.plugin.oauth2.profile.impl.StoreDeviceState"
		scope="prototype"
		c:sealer-ref="#{'%{idp.oidc.tokenSealer:shibboleth.oidc.TokenSealer}'.trim()}"
		p:deviceCodesCache-ref="shibboleth.DeviceCodesCache" />

	<bean id="ErrorViewPopulateAuditContext"
		parent="shibboleth.AbstractPopulateAuditContext"
		p:fieldExtractors="#{getObject('shibboleth.ErrorViewAuditExtractors') ?: getObject('shibboleth.DefaultErrorViewAuditExtractors')}" />

	<bean id="MapEventToView"
		class="net.shibboleth.idp.profile.context.navigate.SpringEventToViewLookupFunction"
		p:defaultView-ref="shibboleth.DefaultErrorView"
		p:eventMap="#{getObject('shibboleth.EventViewMap')}" />

	<bean id="shibboleth.ClientIDLookupStrategy"
		class="fi.csc.shibboleth.plugin.oauth2.devicegrant.profile.context.navigate.DeviceClientIDLookupFunction"
		scope="prototype" p:deviceCodesCache-ref="shibboleth.DeviceCodesCache" />

</beans>
