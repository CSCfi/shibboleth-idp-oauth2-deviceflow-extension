##
## Velocity Template for DisplayUserCodePage view-state
##
## Velocity context will contain the following properties
## flowExecutionUrl - the form action location
## flowRequestContext - the Spring Web Flow RequestContext
## flowExecutionKey - the SWF execution key (this is built into the flowExecutionUrl)
## profileRequestContext - root of context tree
## encoder - HTMLEncoder class
## request - HttpServletRequest
## response - HttpServletResponse
## environment - Spring Environment object for property resolution
## custom - arbitrary object injected by deployer
##
##
<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width,initial-scale=1.0">
        <title>#springMessageText("idp.title", "Web Login Service")</title>
        <link rel="stylesheet" type="text/css" href="$request.getContextPath()/css/main.css">
    </head>
    <body>
    <div class="wrapper">
      <div class="container">
        <header>
          <img src="$request.getContextPath()#springMessage("idp.logo")" alt="#springMessageText("idp.logo.alt-text", "logo")">
        </header>
        <div class="content">
          <div class="column one">
            #parse("login-error.vm")
            <form action="$flowExecutionUrl" method="post">
              <div class="form-element-wrapper">
                <label for="usercode">#springMessageText("idp.login.usercode", "User Code")</label>
                <input class="form-element form-field" id="usercode" name="j_usercode" type="text"
                	value="">
              </div>
              <div class="form-element-wrapper">
                <button class="form-element form-button" type="submit" name="_eventId_proceed"
                    onClick="this.childNodes[0].nodeValue='#springMessageText("idp.login.usercode.pleasewait", "Setting user code, please wait...")'"
                    >#springMessageText("idp.login.usercode.submit", "Submit")</button>
              </div>
            </form>
          </div>
          <div class="column two">
            <ul class="list list-help">
              <li class="list-help-item"><a href="#springMessageText("idp.url.helpdesk", "#")"><span class="item-marker">&rsaquo;</span> #springMessageText("idp.login.needHelp", "Need Help?")</a></li>
            </ul>
          </div>
        </div>
      </div>
      <footer>
        <div class="container container-footer">
          <p class="footer-text">#springMessageText("idp.footer", "Insert your footer text here.")</p>
        </div>
      </footer>
    </div>
 	</body>
</html>